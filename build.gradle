import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

plugins {
    id "idea"
    id "org.jetbrains.kotlin.jvm" version "1.7.10"
    id "org.jetbrains.kotlin.plugin.spring" version "1.7.10"
    id "org.springframework.boot" version "3.0.4"
    id "io.spring.dependency-management" version "1.1.0"
    id "com.github.davidmc24.gradle.plugin.avro-base" version "1.6.0"
    id "com.google.protobuf" version "0.9.2"
}

ext {
    springBootVersion = "3.0.4"
    springBootShellVersion = "3.0.1"

    avroVersion = "1.11.1"
    jacksonYamlVersion = "2.14.2"
    jacksonJsonVersion = "2.14.2"
    protobufVersion = "3.22.2"
    lombokVersion = "1.18.20"
}

[ compileKotlin, compileTestKotlin ]*.kotlinOptions*.jvmTarget = "17"

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.boot:spring-boot-dependencies:$springBootVersion"
        mavenBom "org.springframework.shell:spring-shell-dependencies:$springBootShellVersion"
    }
}



repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter"
    implementation "org.springframework.shell:spring-shell-starter"
    implementation "org.springframework.boot:spring-boot-starter-logging"

    implementation "com.sun.xml.bind:jaxb-impl"
    implementation "jakarta.xml.bind:jakarta.xml.bind-api"
    implementation "org.apache.commons:commons-lang3"

    implementation "com.jayway.jsonpath:json-path"
    implementation "org.apache.avro:avro:$avroVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml"
    implementation "com.google.protobuf:protobuf-java:$protobufVersion"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"

    testImplementation "org.junit.jupiter:junit-jupiter"
    testImplementation "org.junit.jupiter:junit-jupiter-engine"
}

task generateAvro(type: GenerateAvroJavaTask) {
    source("src/main/avro")
    outputDir = file("${project.buildDir}/generated/source/avro")
}

compileKotlin.dependsOn(generateAvro)

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobufVersion}"
        generatedFilesBaseDir( "${project.buildDir}/generated/source/proto")
    }
}

sourceSets {
    main {
        java {
            srcDirs "src/main/java", "${project.buildDir}/generated/source/proto", "${project.buildDir}/generated/source/avro"
        }
    }
}

idea {
    module {
        sourceDirs += [
                file("${project.buildDir}/generated/source/avro"),
                file("${project.buildDir}/generated/source/proto")
        ]
    }
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
}

bootJar {
    archiveFileName = "${project.name}.jar"
}